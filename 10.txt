https://stepik.org/lesson/488830/step/6
my_dict = {
    1.12: 'aa',
    67.9: 45,
    3.11: 'ccc',
    7.9: 'dd',
    9.2: 'ee',
    7.1: 'ff',
    0.12: 'qq',
    1.91: 'aa',
    10.12: [1, 2, 3],
    99.0: {9, 0, 1}
}

# Находим минимальный и максимальный ключи
min_key = min(my_dict.keys())
max_key = max(my_dict.keys())

# Выводим их сумму
print(min_key + max_key)


https://stepik.org/lesson/488830/step/11
users = [
    {'name': 'Todd', 'phone': '551-1414', 'email': 'todd@gmail.com'},
    {'name': 'Helga', 'phone': '555-1618', 'email': 'helga@mail.net'},
    {'name': 'Olivia', 'phone': '449-3141', 'email': ''},
    {'name': 'LJ', 'phone': '555-2718', 'email': 'lj@gmail.net'},
    {'name': 'Ruslan', 'phone': '422-145-9098', 'email': 'rus-lan.cha@yandex.ru'},
    {'name': 'John', 'phone': '233-421-32', 'email': ''},
    {'name': 'Lara', 'phone': '+7998-676-2532', 'email': 'g.lara89@gmail.com'},
    {'name': 'Alina', 'phone': '+7948-799-2434', 'email': 'ali.ch.b@gmail.com'},
    {'name': 'Robert', 'phone': '420-2011', 'email': ''},
    {'name': 'Riyad', 'phone': '128-8890-128', 'email': 'r.mahrez@mail.net'},
    {'name': 'Khabib', 'phone': '+7995-600-9080', 'email': 'kh.nurmag@gmail.com'},
    {'name': 'Olga', 'phone': '6449-314-1213', 'email': ''},
    {'name': 'Roman', 'phone': '+7459-145-8059', 'email': 'roma988@mail.ru'},
    {'name': 'Maria', 'phone': '12-129-3148', 'email': 'm.sharapova@gmail.com'},
    {'name': 'Fedor', 'phone': '+7445-341-0545', 'email': ''},
    {'name': 'Tim', 'phone': '242-449-3141', 'email': 'timm.ggg@yandex.ru'}
]

# Находим пользователей с номерами, оканчивающимися на 8
names_with_8 = [user['name'] for user in users if user['phone'].endswith('8')]

# Сортируем имена в алфавитном порядке
names_with_8.sort()

# Выводим имена на одной строке, разделяя пробелом
print(' '.join(names_with_8))


https://stepik.org/lesson/488830/step/12
users = [
    {'name': 'Todd', 'phone': '551-1414', 'email': 'todd@gmail.com'},
    {'name': 'Helga', 'phone': '555-1618'},
    {'name': 'Olivia', 'phone': '449-3141', 'email': ''},
    {'name': 'LJ', 'phone': '555-2718', 'email': 'lj@gmail.net'},
    {'name': 'Ruslan', 'phone': '422-145-9098', 'email': 'rus-lan.cha@yandex.ru'},
    {'name': 'John', 'phone': '233-421-32', 'email': ''},
    {'name': 'Lara', 'phone': '+7998-676-2532', 'email': 'g.lara89@gmail.com'},
    {'name': 'Alina', 'phone': '+7948-799-2434'},
    {'name': 'Robert', 'phone': '420-2011', 'email': ''},
    {'name': 'Riyad', 'phone': '128-8890-128', 'email': 'r.mahrez@mail.net'},
    {'name': 'Khabib', 'phone': '+7995-600-9080', 'email': 'kh.nurmag@gmail.com'},
    {'name': 'Olga', 'phone': '6449-314-1213', 'email': ''},
    {'name': 'Roman', 'phone': '+7459-145-8059'},
    {'name': 'Maria', 'phone': '12-129-3148', 'email': 'm.sharapova@gmail.com'},
    {'name': 'Fedor', 'phone': '+7445-341-0545', 'email': ''},
    {'name': 'Tim', 'phone': '242-449-3141', 'email': 'timm.ggg@yandex.ru'}
]

# Находим пользователей без электронной почты
names_without_email = [user['name'] for user in users if 'email' not in user or user['email'] == '']

# Сортируем имена в алфавитном порядке
names_without_email.sort()

# Выводим имена на одной строке, разделяя пробелом
print(' '.join(names_without_email))


https://stepik.org/lesson/488830/step/13
# Словарь для замены цифр на слова
digit_to_word = {
    '0': 'zero',
    '1': 'one',
    '2': 'two',
    '3': 'three',
    '4': 'four',
    '5': 'five',
    '6': 'six',
    '7': 'seven',
    '8': 'eight',
    '9': 'nine'
}

# Ввод числа
number = input().strip()

# Преобразование числа в строку
result = ' '.join(digit_to_word[digit] for digit in number)

# Вывод результата
print(result)


https://stepik.org/lesson/488830/step/14
# Словарь с информацией о курсах
courses = {
    'CS101': ('3004', 'Хайнс', '8:00'),
    'CS102': ('4501', 'Альварадо', '9:00'),
    'CS103': ('6755', 'Рич', '10:00'),
    'NT110': ('1244', 'Берк', '11:00'),
    'CM241': ('1411', 'Ли', '13:00')
}

# Ввод номера курса
course_number = input().strip()

# Получение информации о курсе
if course_number in courses:
    room, instructor, time = courses[course_number]
    # Форматированный вывод
    print(f"{course_number}: {room}, {instructor}, {time}")
else:
    print("Курс не найден.")


https://stepik.org/lesson/488830/step/15
# Словарь для сопоставления символов с нажатиями клавиш
key_mapping = {
    '1': '.,?!:',
    '2': 'ABC',
    '3': 'DEF',
    '4': 'GHI',
    '5': 'JKL',
    '6': 'MNO',
    '7': 'PQRS',
    '8': 'TUV',
    '9': 'WXYZ',
    '0': ' ',
}

# Создаем обратный словарь для удобного доступа
press_mapping = {}
for key, chars in key_mapping.items():
    for index, char in enumerate(chars):
        press_mapping[char.lower()] = key * (index + 1)
        press_mapping[char.upper()] = key * (index + 1)

# Ввод сообщения
message = input()

# Генерация нажатий клавиш
result = []
for char in message:
    if char in press_mapping:
        result.append(press_mapping[char])

# Вывод результата
print(''.join(result))


https://stepik.org/lesson/488830/step/16
# Словарь для сопоставления символов с кодом Морзе
morse_code = {
    'A': '.-',    'B': '-...',  'C': '-.-.',  'D': '-..',   'E': '.',
    'F': '..-.',  'G': '--.',   'H': '....',  'I': '..',    'J': '.---',
    'K': '-.-',   'L': '.-..',  'M': '--',    'N': '-.',    'O': '---',
    'P': '.--.',  'Q': '--.-',  'R': '.-.',   'S': '...',   'T': '-',
    'U': '..-',   'V': '...-',  'W': '.--',   'X': '-..-',  'Y': '-.--',
    'Z': '--..',  '0': '-----',  '1': '.----', '2': '..---', '3': '...--',
    '4': '....-',  '5': '.....', '6': '-....', '7': '--...', '8': '---..',
    '9': '----.'
}

# Ввод сообщения
message = input().strip()

# Кодирование в код Морзе
encoded_message = []
for char in message.upper():
    if char in morse_code:
        encoded_message.append(morse_code[char])

# Вывод результата
print(' '.join(encoded_message))




https://stepik.org/lesson/446696/step/10
result = {}

for i in range(1, 16):
    result[i] = i ** 2


https://stepik.org/lesson/446696/step/11
dict1 = {'a': 100, 'z': 333, 'b': 200, 'c': 300, 'd': 45, 'e': 98, 't': 76, 'q': 34, 'f': 90, 'm': 230}
dict2 = {'a': 300, 'b': 200, 'd': 400, 't': 777, 'c': 12, 'p': 123, 'w': 111, 'z': 666}

result = {}

# Объединяем два словаря
for key in set(dict1) | set(dict2):
    result[key] = dict1.get(key, 0) + dict2.get(key, 0)


https://stepik.org/lesson/446696/step/12
text = 'footballcyberpunkextraterritorialityconversationalistblockophthalmoscopicinterdependencemamauserfff'

result = {}

for char in text:
    result[char] = result.get(char, 0) + 1


https://stepik.org/lesson/446696/step/13
s = 'orange strawberry barley gooseberry apple apricot barley currant orange melon pomegranate banana banana orange barley apricot plum grapefruit banana quince strawberry barley grapefruit banana grapes melon strawberry apricot currant currant gooseberry raspberry apricot currant orange lime quince grapefruit barley banana melon pomegranate barley banana orange barley apricot plum banana quince lime grapefruit strawberry gooseberry apple barley apricot currant orange melon pomegranate banana banana orange apricot barley plum banana grapefruit banana quince currant orange melon pomegranate barley plum banana quince barley lime grapefruit pomegranate barley'

# Разбиваем строку на слова
words = s.split()

# Создаем словарь для подсчета частоты слов
word_count = {}

for word in words:
    word_count[word] = word_count.get(word, 0) + 1

# Находим максимальную частоту
max_count = max(word_count.values())

# Находим слова с максимальной частотой
most_frequent_words = [word for word, count in word_count.items() if count == max_count]

# Выводим слово, которое меньше в лексикографическом порядке
print(min(most_frequent_words))


https://stepik.org/lesson/446696/step/14
pets = [('Hatiko', 'Parker', 'Wilson', 50),
        ('Rusty', 'Josh', 'King', 25),
        ('Fido', 'John', 'Smith', 28),
        ('Butch', 'Jake', 'Smirnoff', 18),
        ('Odi', 'Emma', 'Wright', 18),
        ('Balto', 'Josh', 'King', 25),
        ('Barry', 'Josh', 'King', 25),
        ('Snape', 'Hannah', 'Taylor', 40),
        ('Horry', 'Martha', 'Robinson', 73),
        ('Giro', 'Alex', 'Martinez', 65),
        ('Zooma', 'Simon', 'Nevel', 32),
        ('Lassie', 'Josh', 'King', 25),
        ('Chase', 'Martha', 'Robinson', 73),
        ('Ace', 'Martha', 'Williams', 38),
        ('Rocky', 'Simon', 'Nevel', 32)]

result = {}

for pet in pets:
    dog_name, first_name, last_name, age = pet
    owner_key = (first_name, last_name, age)

    if owner_key not in result:
        result[owner_key] = []

    result[owner_key].append(dog_name)

# Выводить содержимое словаря result не нужно


https://stepik.org/lesson/446696/step/15
import re
from collections import Counter

# Ввод текста
text = input()

# Убираем знаки препинания и приводим текст к нижнему регистру
cleaned_text = re.sub(r'[.,!?:;()-]', '', text).lower()

# Разбиваем текст на слова
words = cleaned_text.split()

# Считаем частоту слов
word_count = Counter(words)

# Находим минимальную частоту
min_count = min(word_count.values())

# Находим слова с минимальной частотой
rare_words = [word for word, count in word_count.items() if count == min_count]

# Выводим слово в нижнем регистре, которое меньше в лексикографическом порядке
print(min(rare_words))


https://stepik.org/lesson/446696/step/16
# Ввод строки идентификаторов
input_ids = input().split()

# Словарь для отслеживания количества встреченных идентификаторов
count = {}

# Список для хранения исправленных идентификаторов
result = []

# Обработка каждого идентификатора
for identifier in input_ids:
    if identifier in count:
        # Увеличиваем счетчик для повторяющегося идентификатора
        count[identifier] += 1
        # Добавляем постфикс к идентификатору
        result.append(f"{identifier}_{count[identifier] - 1}")
    else:
        # Если идентификатор встречается впервые, добавляем его в результат
        count[identifier] = 1
        result.append(identifier)

# Вывод исправленных идентификаторов
print(" ".join(result))


https://stepik.org/lesson/488831/step/1
# Ввод количества слов в словаре
n = int(input())

# Инициализация словаря для хранения сленговых выражений
slang_dict = {}

# Ввод слов и их определений
for _ in range(n):
    entry = input().strip()
    word, definition = entry.split(': ', 1)  # Разделяем по ': '
    slang_dict[word.lower()] = definition  # Сохраняем в словаре в нижнем регистре

# Ввод количества поисковых слов
m = int(input())

# Ввод поисковых слов и вывод определений
for _ in range(m):
    query = input().strip().lower()  # Приводим к нижнему регистру
    if query in slang_dict:
        print(slang_dict[query])
    else:
        print("Не найдено")


https://stepik.org/lesson/488831/step/2
# Ввод двух слов
word1 = input().strip()
word2 = input().strip()

# Сортируем буквы в словах и сравниваем
if sorted(word1) == sorted(word2):
    print("YES")
else:
    print("NO")


https://stepik.org/lesson/488831/step/3
import string

# Функция для очистки и нормализации текста
def normalize(text):
    # Убираем знаки препинания и пробелы, приводим к нижнему регистру
    text = text.lower()
    text = text.translate(str.maketrans('', '', string.punctuation))
    text = text.replace(' ', '')
    return text

# Ввод двух предложений
sentence1 = input().strip()
sentence2 = input().strip()

# Нормализация предложений
normalized1 = normalize(sentence1)
normalized2 = normalize(sentence2)

# Проверка на анаграммы
if sorted(normalized1) == sorted(normalized2):
    print("YES")
else:
    print("NO")


https://stepik.org/lesson/488831/step/4
# Ввод количества пар синонимов
n = int(input().strip())

# Создаем словарь для хранения синонимов
synonyms = {}

# Ввод пар синонимов
for _ in range(n):
    word1, word2 = input().strip().split()
    synonyms[word1] = word2
    synonyms[word2] = word1  # Добавляем обратную пару

# Ввод слова, для которого нужно найти синоним
word_to_find = input().strip()

# Вывод синонима
print(synonyms[word_to_find])


https://stepik.org/lesson/488831/step/5
# Ввод количества стран
n = int(input().strip())

# Создаем словарь для хранения городов и соответствующих стран
city_to_country = {}

# Ввод стран и городов
for _ in range(n):
    line = input().strip().split()
    country = line[0]  # Первая часть строки - это страна
    cities = line[1:]  # Остальные части - это города

    for city in cities:
        city_to_country[city] = country  # Добавляем город и соответствующую страну в словарь

# Ввод количества запросов
m = int(input().strip())

# Обработка запросов
for _ in range(m):
    city_query = input().strip()
    # Вывод страны для запрашиваемого города
    print(city_to_country[city_query])


https://stepik.org/lesson/488831/step/6
# Ввод количества номеров телефонов
n = int(input().strip())

# Создаем словарь для хранения телефонов
phone_book = {}

# Ввод телефонов и владельцев
for _ in range(n):
    line = input().strip().split()
    phone = line[0]  # Первый элемент - телефон
    name = ' '.join(line[1:])  # Остальные элементы - имя

    # Приводим имя к нижнему регистру для удобства
    name_lower = name.lower()

    # Добавляем телефон в словарь
    if name_lower not in phone_book:
        phone_book[name_lower] = []
    phone_book[name_lower].append(phone)

# Ввод количества запросов
m = int(input().strip())

# Обработка запросов
for _ in range(m):
    query = input().strip().lower()  # Приводим запрос к нижнему регистру
    if query in phone_book:
        print(' '.join(phone_book[query]))  # Выводим телефоны через пробел
    else:
        print('абонент не найден')  # Если абонент не найден


https://stepik.org/lesson/488831/step/7
# Входные данные
encrypted_word = input().strip()
n = int(input().strip())

# Словарь для хранения частоты
frequency_dict = {}
for _ in range(n):
    line = input().strip()
    letter, frequency = line.split(': ')
    frequency_dict[int(frequency)] = letter

# Сортировка частот по убыванию
sorted_frequencies = sorted(frequency_dict.keys(), reverse=True)

# Подсчет частоты вхождений символов в зашифрованном слове
count = {}
for char in encrypted_word:
    count[char] = count.get(char, 0) + 1

# Создание дешифрованного слова
decrypted_word = [''] * len(encrypted_word)

# Заполнение дешифрованного слова на основе частоты
for freq in sorted_frequencies:
    letter = frequency_dict[freq]
    for char in count:
        if count[char] == freq:
            # Находим позиции для заполнения
            for i in range(len(decrypted_word)):
                if encrypted_word[i] == char:
                    decrypted_word[i] = letter
            break

# Объединение в строку и вывод
print(''.join(decrypted_word))


https://stepik.org/lesson/446698/step/6
numbers = [34, 10, -4, 6, 10, 23, -90, 100, 21, -35, -95, 1, 36, -38, -19, 1, 6, 87]

result = {i: num**2 for i, num in enumerate(numbers)}


https://stepik.org/lesson/446698/step/7
colors = {
    'c1': 'Red', 'c2': 'Grey', 'c3': None, 'c4': 'Green', 'c5': 'Yellow',
    'c6': 'Pink', 'c7': 'Orange', 'c8': None, 'c9': 'White', 'c10': 'Black',
    'c11': 'Violet', 'c12': 'Gold', 'c13': None, 'c14': 'Amber', 'c15': 'Azure',
    'c16': 'Beige', 'c17': 'Bronze', 'c18': None, 'c19': 'Lilac', 'c20': 'Pearl',
    'c21': None, 'c22': 'Sand', 'c23': None
}

result = {k: v for k, v in colors.items() if v is not None}


https://stepik.org/lesson/446698/step/8
favorite_numbers = {
    'timur': 17, 'ruslan': 7, 'larisa': 19, 'roman': 123, 'rebecca': 293,
    'ronald': 76, 'dorothy': 62, 'harold': 36, 'matt': 314, 'kim': 451,
    'rosaly': 18, 'rustam': 89, 'soltan': 111, 'amir': 654, 'dima': 390,
    'amiran': 777, 'geor': 999, 'sveta': 75, 'rita': 909, 'kirill': 404,
    'olga': 271, 'anna': 55, 'madlen': 876
}

result = {k: v for k, v in favorite_numbers.items() if 10 <= v < 100}


https://stepik.org/lesson/446698/step/9
months = {
    1: 'January', 2: 'February', 3: 'March', 4: 'April', 5: 'May',
    6: 'June', 7: 'July', 8: 'August', 9: 'September', 10: 'October',
    11: 'November', 12: 'December'
}

result = {v: k for k, v in months.items()}


https://stepik.org/lesson/446698/step/10
s = '1:men 2:kind 90:number 0:sun 34:book 56:mountain 87:wood 54:car 3:island 88:power 7:box 17:star 101:ice'

result = {int(key): value for pair in s.split() for key, value in (pair.split(':'),)}


https://stepik.org/lesson/446698/step/11
numbers = [34, 10, 4, 6, 10, 23, 90, 100, 21, 35, 95, 1, 36, 38, 19, 1, 6, 87, 1000, 13456, 360]

result = {num: sorted([i for i in range(1, num + 1) if num % i == 0]) for num in numbers}


https://stepik.org/lesson/446698/step/12
words = ['hello', 'bye', 'yes', 'no', 'python', 'apple', 'maybe', 'stepik', 'beegeek']

result = {word: [ord(char) for char in word] for word in words}


https://stepik.org/lesson/446698/step/13
letters = {0: 'A', 1: 'B', 2: 'C', 3: 'D', 4: 'E', 5: 'F', 6: 'G', 7: 'H', 8: 'I', 9: 'J', 10: 'K', 11: 'L', 12: 'M', 13: 'N', 14: 'O', 15: 'P', 16: 'Q', 17: 'R', 18: 'S', 19: 'T', 20: 'U', 21: 'V', 22: 'W', 23: 'X', 24: 'Y', 26: 'Z'}

remove_keys = [1, 5, 7, 12, 17, 19, 21, 24]

result = {key: value for key, value in letters.items() if key not in remove_keys}


https://stepik.org/lesson/446698/step/14
students = {
    'Timur': (170, 75), 'Ruslan': (180, 105), 'Soltan': (192, 68),
    'Roman': (175, 70), 'Madlen': (160, 50), 'Stefani': (165, 70),
    'Tom': (190, 90), 'Jerry': (180, 87), 'Anna': (172, 67),
    'Scott': (168, 78), 'John': (186, 79), 'Alex': (195, 120),
    'Max': (200, 110), 'Barak': (180, 89), 'Donald': (170, 80),
    'Rustam': (186, 100), 'Alice': (159, 59), 'Rita': (170, 80),
    'Mary': (175, 69), 'Jane': (190, 80)
}

result = {name: (height, weight) for name, (height, weight) in students.items() if height > 167 and weight < 75}


https://stepik.org/lesson/446698/step/15
tuples = [
    (1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12),
    (13, 14, 15), (16, 17, 18), (19, 20, 21), (22, 23, 24),
    (25, 26, 27), (28, 29, 30), (31, 32, 33), (34, 35, 36)
]

result = {t[0]: t[1:] for t in tuples}


https://stepik.org/lesson/446698/step/16
student_ids = ['S001', 'S002', 'S003', 'S004', 'S005', 'S006', 'S007', 'S008', 'S009', 'S010', 'S011', 'S012', 'S013']
student_names = ['Camila Rodriguez', 'Juan Cruz', 'Dan Richards', 'Sam Boyle', 'Batista Cesare', 'Francesco Totti', 'Khalid Hussain', 'Ethan Hawke', 'David Bowman', 'James Milner', 'Michael Owen', 'Gary Oldman', 'Tom Hardy']
student_grades = [86, 98, 89, 92, 45, 67, 89, 90, 100, 98, 10, 96, 93]

result = [{student_id: {student_name: grade}} for student_id, student_name, grade in zip(student_ids, student_names, student_grades)]
